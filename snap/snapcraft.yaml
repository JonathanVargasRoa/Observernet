# Copyright (c) 2018-2019 The Ion developers
# Copyright (c) 2019 The OBSR developers
name: obsr
base: core18
version: v1.2.00
summary:   peer-to-peer network based digital currency
description: |
  OBSR is an open source crypto-currency focused on fast private
  transactions with low transaction fees & environmental footprint.
  It utilizes a custom Proof of Stake protocol for securing its network
  and uses an innovative variable seesaw reward mechanism
  that dynamically balances 90% of its block reward size between
  masternodes and staking nodes and 10% dedicated for budget proposals.
  The goal of OBSR is to achieve a decentralized sustainable
  crypto currency with near instant full-time private transactions,
  fair governance and community intelligence.
  
  - Anonymized transactions using the Zerocoin Protocol (http://www.obsr.org/zobsr).
  - Fast transactions featuring guaranteed zero confirmation transactions, we call it SwiftX.
  - Decentralized blockchain voting utilizing Masternode technology to form a DAO. The blockchain will distribute monthly treasury funds based on successful proposals submitted by the community and voted on by the DAO.
  
  Github: https://github.com/observernet/obsr/
grade: stable
confinement: strict
icon: share/pixmaps/obsr256.png
apps:
  daemon:
    command: obsrd
    plugs: [network, network-bind, network-status, home, removable-media]
    environment:
      XDG_DATA_DIRS: $SNAP_USER_DATA:$SNAP/usr/share:$XDG_DATA_DIRS
  qt:
    command: obsr-qt
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: qt.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
  qt-testnet:
    command: obsr-qt --testnet
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: qt-testnet.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
  qt-regtest:
    command: obsr-qt --regtest
    plugs: [network, network-bind, network-status, unity7, desktop, desktop-legacy, wayland, x11, mir, opengl, home, gsettings, removable-media, screen-inhibit-control, pulseaudio, media-hub]
    desktop: qt-regtest.desktop
    environment:
      QT_XKB_CONFIG_ROOT: $SNAP_USER_DATA:$SNAP/usr/share:$QT_XKB_CONFIG_ROOT
  cli:
    command: obsr-cli
    plugs: [network, network-bind, home, removable-media]
  tx:
    command: obsr-tx
    plugs: [home, removable-media]
  test:
    command: test_obsr
    plugs: [home, removable-media]
parts:
  obsr:
    source: https://github.com/observernet/obsr
    source-type: git
    source-tag: v1.2.00
    plugin: nil
    override-build: |
      SHORTNAME="obsr"
      if [ $SNAPCRAFT_ARCH_TRIPLET = "i386-linux-gnu" ]; then
        HOST="i686-linux-gnu"
      else
        HOST="${SNAPCRAFT_ARCH_TRIPLET}"
      fi
      # APPLY PATCHES
      echo "apply patches:"
      git apply ${SNAPCRAFT_STAGE}/default_data_dir.patch
      git apply ${SNAPCRAFT_STAGE}/fix-bdb-tmp-folder.patch
      git apply ${SNAPCRAFT_STAGE}/fix-use-snap-instead-of-dirty.patch
      sed -i 's/tar --strip-components/tar --no-same-owner --strip-components/' ${SNAPCRAFT_PART_BUILD}/depends/funcs.mk
      # BUILD DEPENDENCIES
      echo "START BUILDING ${SHORTNAME} FOR ${SNAPCRAFT_ARCH_TRIPLET} architecture"
      cd ${SNAPCRAFT_PART_BUILD}/depends
      make download-linux
      make -j4 HOST=${HOST}
      # CONFIGURE
      echo "Configure ${SHORTNAME}"
      cd ${SNAPCRAFT_PART_BUILD}
      echo "Configure and build ${SHORTNAME}"
      ./autogen.sh
      ./configure --prefix=`pwd`/depends/${HOST}
      # COMPILE
      echo "Compile ${SHORTNAME}"
      make -j4
      # INSTALL
      echo "Install ${SHORTNAME}"
      make install prefix=${SNAPCRAFT_PART_INSTALL}
      # POST INSTALL
      if [ $SNAPCRAFT_ARCH_TRIPLET = "powerpc64le-linux-gnu" ]; then
        if [ -e $SNAPCRAFT_PART_BUILD/src/qt/${SHORTNAME}-qt ]; then
          echo "PPC64EL fix - ${SHORTNAME}-qt exists, fix unrequired"
        else
          echo "echo ${SHORTNAME}-qt is not installed" > ${SNAPCRAFT_PART_INSTALL}/usr/bin/${SHORTNAME}-qt
          chmod +x ${SNAPCRAFT_PART_INSTALL}/usr/bin/${SHORTNAME}-qt
          echo "PPC64EL fix - ${SHORTNAME}-qt exists, fix required, dummy as ${SHORTNAME}-qt"
        fi
      fi
      echo "Installed files:"
      find ${SNAPCRAFT_PART_INSTALL} -type f
    build-packages:
      - curl
      - wget
      - gcc
      - gcc-8
      - g++
      - g++-8
      - make
      - autoconf
      - automake
      - cmake
      - pkg-config
      - libtool
      - bsdmainutils
      - binutils
      - python3
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - locales-all
      - qtwayland5
      - ca-certificates
    after:
      - patches
  patches:
    source: snap/patches
    plugin: dump
    prime:
      - -*
  desktop:
    source: snap/usr/share/applications
    plugin: dump
